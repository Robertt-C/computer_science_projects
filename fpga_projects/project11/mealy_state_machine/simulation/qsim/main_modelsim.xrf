vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/main.v
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/frequency_divider.v
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/mealy_state_machine.v
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform1.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform2.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform3.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform4.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/Waveform5.vwf
source_file = 1, C:/intelFPGA_lite/17.1/AProjetos/project11/mealy_state_machine/decoder_o_nine.v
design_name = main
instance = comp, \out[0]~output , out[0]~output, main, 1
instance = comp, \out[1]~output , out[1]~output, main, 1
instance = comp, \out[2]~output , out[2]~output, main, 1
instance = comp, \out[3]~output , out[3]~output, main, 1
instance = comp, \filtered_clock~output , filtered_clock~output, main, 1
instance = comp, \a~output , a~output, main, 1
instance = comp, \b~output , b~output, main, 1
instance = comp, \c~output , c~output, main, 1
instance = comp, \d~output , d~output, main, 1
instance = comp, \e~output , e~output, main, 1
instance = comp, \f~output , f~output, main, 1
instance = comp, \g~output , g~output, main, 1
instance = comp, \clock~input , clock~input, main, 1
instance = comp, \clock~inputclkctrl , clock~inputclkctrl, main, 1
instance = comp, \select[0]~input , select[0]~input, main, 1
instance = comp, \select[1]~input , select[1]~input, main, 1
instance = comp, \state_machine|Selector4~0 , state_machine|Selector4~0, main, 1
instance = comp, \state_machine|Selector4~1 , state_machine|Selector4~1, main, 1
instance = comp, \reset~input , reset~input, main, 1
instance = comp, \state_machine|actualState.E , state_machine|actualState.E, main, 1
instance = comp, \state_machine|Selector5~0 , state_machine|Selector5~0, main, 1
instance = comp, \state_machine|Selector5~1 , state_machine|Selector5~1, main, 1
instance = comp, \state_machine|actualState.F , state_machine|actualState.F, main, 1
instance = comp, \state_machine|Selector12~1 , state_machine|Selector12~1, main, 1
instance = comp, \state_machine|Selector12~2 , state_machine|Selector12~2, main, 1
instance = comp, \state_machine|actualState.G , state_machine|actualState.G, main, 1
instance = comp, \state_machine|Selector7~0 , state_machine|Selector7~0, main, 1
instance = comp, \state_machine|Selector7~1 , state_machine|Selector7~1, main, 1
instance = comp, \state_machine|actualState.H , state_machine|actualState.H, main, 1
instance = comp, \state_machine|Selector8~0 , state_machine|Selector8~0, main, 1
instance = comp, \state_machine|Selector8~1 , state_machine|Selector8~1, main, 1
instance = comp, \state_machine|actualState.I , state_machine|actualState.I, main, 1
instance = comp, \state_machine|Selector10~0 , state_machine|Selector10~0, main, 1
instance = comp, \state_machine|actualState.displayOff , state_machine|actualState.displayOff, main, 1
instance = comp, \state_machine|Selector0~0 , state_machine|Selector0~0, main, 1
instance = comp, \state_machine|Selector0~1 , state_machine|Selector0~1, main, 1
instance = comp, \state_machine|actualState.A , state_machine|actualState.A, main, 1
instance = comp, \state_machine|Selector1~0 , state_machine|Selector1~0, main, 1
instance = comp, \state_machine|Selector1~1 , state_machine|Selector1~1, main, 1
instance = comp, \state_machine|actualState.B , state_machine|actualState.B, main, 1
instance = comp, \state_machine|Selector11~0 , state_machine|Selector11~0, main, 1
instance = comp, \state_machine|Selector2~0 , state_machine|Selector2~0, main, 1
instance = comp, \state_machine|actualState.C , state_machine|actualState.C, main, 1
instance = comp, \state_machine|Selector3~0 , state_machine|Selector3~0, main, 1
instance = comp, \state_machine|Selector3~1 , state_machine|Selector3~1, main, 1
instance = comp, \state_machine|actualState.D , state_machine|actualState.D, main, 1
instance = comp, \state_machine|Selector13~0 , state_machine|Selector13~0, main, 1
instance = comp, \state_machine|Selector13~3 , state_machine|Selector13~3, main, 1
instance = comp, \state_machine|Selector13~2 , state_machine|Selector13~2, main, 1
instance = comp, \state_machine|Selector13~1 , state_machine|Selector13~1, main, 1
instance = comp, \state_machine|Selector13~4 , state_machine|Selector13~4, main, 1
instance = comp, \state_machine|Selector13~5 , state_machine|Selector13~5, main, 1
instance = comp, \state_machine|Selector12~3 , state_machine|Selector12~3, main, 1
instance = comp, \state_machine|Selector12~0 , state_machine|Selector12~0, main, 1
instance = comp, \state_machine|Selector12~4 , state_machine|Selector12~4, main, 1
instance = comp, \state_machine|Selector12~5 , state_machine|Selector12~5, main, 1
instance = comp, \state_machine|Selector11~3 , state_machine|Selector11~3, main, 1
instance = comp, \state_machine|Selector11~2 , state_machine|Selector11~2, main, 1
instance = comp, \state_machine|Selector11~1 , state_machine|Selector11~1, main, 1
instance = comp, \state_machine|Selector11~4 , state_machine|Selector11~4, main, 1
instance = comp, \divider|Add0~0 , divider|Add0~0, main, 1
instance = comp, \divider|out~1 , divider|out~1, main, 1
instance = comp, \divider|out[0] , divider|out[0], main, 1
instance = comp, \divider|Add0~2 , divider|Add0~2, main, 1
instance = comp, \divider|out[1] , divider|out[1], main, 1
instance = comp, \divider|Add0~4 , divider|Add0~4, main, 1
instance = comp, \divider|out[2] , divider|out[2], main, 1
instance = comp, \divider|Add0~6 , divider|Add0~6, main, 1
instance = comp, \divider|out[3] , divider|out[3], main, 1
instance = comp, \divider|Add0~8 , divider|Add0~8, main, 1
instance = comp, \divider|out[4] , divider|out[4], main, 1
instance = comp, \divider|Add0~10 , divider|Add0~10, main, 1
instance = comp, \divider|out[5] , divider|out[5], main, 1
instance = comp, \divider|Add0~12 , divider|Add0~12, main, 1
instance = comp, \divider|out[6] , divider|out[6], main, 1
instance = comp, \divider|Add0~14 , divider|Add0~14, main, 1
instance = comp, \divider|out~0 , divider|out~0, main, 1
instance = comp, \divider|out[7] , divider|out[7], main, 1
instance = comp, \divider|Add0~16 , divider|Add0~16, main, 1
instance = comp, \divider|out[8] , divider|out[8], main, 1
instance = comp, \divider|Add0~18 , divider|Add0~18, main, 1
instance = comp, \divider|out[9] , divider|out[9], main, 1
instance = comp, \divider|Add0~20 , divider|Add0~20, main, 1
instance = comp, \divider|out[10] , divider|out[10], main, 1
instance = comp, \divider|Add0~22 , divider|Add0~22, main, 1
instance = comp, \divider|out[11] , divider|out[11], main, 1
instance = comp, \divider|Add0~24 , divider|Add0~24, main, 1
instance = comp, \divider|out~2 , divider|out~2, main, 1
instance = comp, \divider|out[12] , divider|out[12], main, 1
instance = comp, \divider|Add0~26 , divider|Add0~26, main, 1
instance = comp, \divider|out~3 , divider|out~3, main, 1
instance = comp, \divider|out[13] , divider|out[13], main, 1
instance = comp, \divider|Add0~28 , divider|Add0~28, main, 1
instance = comp, \divider|out~4 , divider|out~4, main, 1
instance = comp, \divider|out[14] , divider|out[14], main, 1
instance = comp, \divider|Add0~30 , divider|Add0~30, main, 1
instance = comp, \divider|out~5 , divider|out~5, main, 1
instance = comp, \divider|out[15] , divider|out[15], main, 1
instance = comp, \divider|Add0~32 , divider|Add0~32, main, 1
instance = comp, \divider|out[16] , divider|out[16], main, 1
instance = comp, \divider|Add0~34 , divider|Add0~34, main, 1
instance = comp, \divider|out~6 , divider|out~6, main, 1
instance = comp, \divider|out[17] , divider|out[17], main, 1
instance = comp, \divider|Add0~36 , divider|Add0~36, main, 1
instance = comp, \divider|out[18] , divider|out[18], main, 1
instance = comp, \divider|Add0~38 , divider|Add0~38, main, 1
instance = comp, \divider|out~7 , divider|out~7, main, 1
instance = comp, \divider|out[19] , divider|out[19], main, 1
instance = comp, \divider|Equal0~5 , divider|Equal0~5, main, 1
instance = comp, \divider|Add0~40 , divider|Add0~40, main, 1
instance = comp, \divider|out~8 , divider|out~8, main, 1
instance = comp, \divider|out[20] , divider|out[20], main, 1
instance = comp, \divider|Add0~42 , divider|Add0~42, main, 1
instance = comp, \divider|out~9 , divider|out~9, main, 1
instance = comp, \divider|out[21] , divider|out[21], main, 1
instance = comp, \divider|Add0~44 , divider|Add0~44, main, 1
instance = comp, \divider|out~10 , divider|out~10, main, 1
instance = comp, \divider|out[22] , divider|out[22], main, 1
instance = comp, \divider|Add0~46 , divider|Add0~46, main, 1
instance = comp, \divider|out~11 , divider|out~11, main, 1
instance = comp, \divider|out[23] , divider|out[23], main, 1
instance = comp, \divider|Equal0~6 , divider|Equal0~6, main, 1
instance = comp, \divider|Add0~48 , divider|Add0~48, main, 1
instance = comp, \divider|out[24] , divider|out[24], main, 1
instance = comp, \divider|Add0~50 , divider|Add0~50, main, 1
instance = comp, \divider|out~12 , divider|out~12, main, 1
instance = comp, \divider|out[25] , divider|out[25], main, 1
instance = comp, \divider|Equal0~7 , divider|Equal0~7, main, 1
instance = comp, \divider|Equal0~3 , divider|Equal0~3, main, 1
instance = comp, \divider|Equal0~0 , divider|Equal0~0, main, 1
instance = comp, \divider|Equal0~2 , divider|Equal0~2, main, 1
instance = comp, \divider|Equal0~1 , divider|Equal0~1, main, 1
instance = comp, \divider|Equal0~4 , divider|Equal0~4, main, 1
instance = comp, \divider|Equal0~8 , divider|Equal0~8, main, 1
instance = comp, \divider|filtered_clock , divider|filtered_clock, main, 1
instance = comp, \decoder|WideOr0~0 , decoder|WideOr0~0, main, 1
instance = comp, \decoder|WideOr1~0 , decoder|WideOr1~0, main, 1
instance = comp, \decoder|WideOr2~0 , decoder|WideOr2~0, main, 1
instance = comp, \decoder|WideOr3~0 , decoder|WideOr3~0, main, 1
instance = comp, \decoder|WideOr4~0 , decoder|WideOr4~0, main, 1
instance = comp, \decoder|WideOr5~0 , decoder|WideOr5~0, main, 1
instance = comp, \decoder|WideOr6~0 , decoder|WideOr6~0, main, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
